version: '3.8'

services:
  # Redis Stack 服务器（核心 + 所有模块）
  redis-stack:
    image: redis/redis-stack-server:7.2.0-v18  # 官方最新稳定版
    container_name: redis-stack
    restart: always
    ports:
      - "6379:6379"   # Redis 服务端口
      - "8001:8001"   # RedisInsight 管理端口（仅当需要容器内访问时）
    environment:
      - REDIS_ARGS=--requirepass your_strong_password  # 强制设置密码
      - REDIS_ARGS=--appendonly yes                   # 开启AOF持久化
      - REDIS_ARGS=--maxmemory 2gb                    # 限制内存使用
      - REDIS_ARGS=--maxmemory-policy allkeys-lru     # 内存满时LRU策略
    volumes:
      - redis-data:/data               # 持久化数据卷
      - ./redis-stack.conf:/etc/redis-stack.conf  # 自定义配置文件（可选）
    networks:
      - redis-net
    deploy:  # 资源限制（适用于生产环境）
      resources:
        limits:
          cpus: '1.0'
          memory: 2G

  # RedisInsight 管理工具（独立容器，可管理多个Redis实例）
  redisinsight:
    image: redis/redisinsight:latest  # 官方最新版
    container_name: redisinsight
    restart: always
    ports:
      - "8001:8001"  # 主访问端口
    volumes:
      - redisinsight-data:/db  # 保存连接配置
    networks:
      - redis-net
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

# 持久化数据卷
volumes:
  redis-data:     # Redis 数据卷
    driver: local
  redisinsight-data:  # RedisInsight 配置卷
    driver: local

# 自定义网络（隔离服务）
networks:
  redis-net:
    driver: bridge
    name: redis-stack-net